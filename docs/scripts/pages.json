[{"name":"fun logging(name: String): ReadOnlyProperty<Any?, Logger>","description":"dev.floofy.utils.slf4j.logging","location":"slf4j/dev.floofy.utils.slf4j/logging.html","searchKeys":["logging","fun logging(name: String): ReadOnlyProperty<Any?, Logger>","dev.floofy.utils.slf4j.logging"]},{"name":"inline fun <T> logging(): ReadOnlyProperty<Any?, Logger>","description":"dev.floofy.utils.slf4j.logging","location":"slf4j/dev.floofy.utils.slf4j/logging.html","searchKeys":["logging","inline fun <T> logging(): ReadOnlyProperty<Any?, Logger>","dev.floofy.utils.slf4j.logging"]},{"name":"inline fun <T> GlobalContext.retrieve(): T","description":"dev.floofy.utils.koin.retrieve","location":"extensions-koin/dev.floofy.utils.koin/retrieve.html","searchKeys":["retrieve","inline fun <T> GlobalContext.retrieve(): T","dev.floofy.utils.koin.retrieve"]},{"name":"inline fun <T> GlobalContext.retrieveAll(): List<T>","description":"dev.floofy.utils.koin.retrieveAll","location":"extensions-koin/dev.floofy.utils.koin/retrieve-all.html","searchKeys":["retrieveAll","inline fun <T> GlobalContext.retrieveAll(): List<T>","dev.floofy.utils.koin.retrieveAll"]},{"name":"inline fun <T> GlobalContext.retrieveOrNull(): T?","description":"dev.floofy.utils.koin.retrieveOrNull","location":"extensions-koin/dev.floofy.utils.koin/retrieve-or-null.html","searchKeys":["retrieveOrNull","inline fun <T> GlobalContext.retrieveOrNull(): T?","dev.floofy.utils.koin.retrieveOrNull"]},{"name":"inline fun <T> inject(): ReadOnlyProperty<Any?, T>","description":"dev.floofy.utils.koin.inject","location":"extensions-koin/dev.floofy.utils.koin/inject.html","searchKeys":["inject","inline fun <T> inject(): ReadOnlyProperty<Any?, T>","dev.floofy.utils.koin.inject"]},{"name":"inline fun <T> injectOrNull(): ReadOnlyProperty<Any?, T?>","description":"dev.floofy.utils.koin.injectOrNull","location":"extensions-koin/dev.floofy.utils.koin/inject-or-null.html","searchKeys":["injectOrNull","inline fun <T> injectOrNull(): ReadOnlyProperty<Any?, T?>","dev.floofy.utils.koin.injectOrNull"]},{"name":"class AsyncTransaction<T>(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","description":"dev.floofy.utils.exposed.AsyncTransaction","location":"exposed/dev.floofy.utils.exposed/-async-transaction/index.html","searchKeys":["AsyncTransaction","class AsyncTransaction<T>(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","dev.floofy.utils.exposed.AsyncTransaction"]},{"name":"fun <T> AsyncTransaction(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","description":"dev.floofy.utils.exposed.AsyncTransaction.AsyncTransaction","location":"exposed/dev.floofy.utils.exposed/-async-transaction/-async-transaction.html","searchKeys":["AsyncTransaction","fun <T> AsyncTransaction(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","dev.floofy.utils.exposed.AsyncTransaction.AsyncTransaction"]},{"name":"suspend fun <T> asyncTransaction(scope: CoroutineScope = GlobalScope, block: Transaction.() -> T): T","description":"dev.floofy.utils.exposed.asyncTransaction","location":"exposed/dev.floofy.utils.exposed/async-transaction.html","searchKeys":["asyncTransaction","suspend fun <T> asyncTransaction(scope: CoroutineScope = GlobalScope, block: Transaction.() -> T): T","dev.floofy.utils.exposed.asyncTransaction"]},{"name":"suspend fun execute(): T","description":"dev.floofy.utils.exposed.AsyncTransaction.execute","location":"exposed/dev.floofy.utils.exposed/-async-transaction/execute.html","searchKeys":["execute","suspend fun execute(): T","dev.floofy.utils.exposed.AsyncTransaction.execute"]},{"name":"fun <T : Any> setOnceGetValue(): ReadWriteProperty<Any?, T?>","description":"dev.floofy.utils.java.setOnceGetValue","location":"java-utils/dev.floofy.utils.java/set-once-get-value.html","searchKeys":["setOnceGetValue","fun <T : Any> setOnceGetValue(): ReadWriteProperty<Any?, T?>","dev.floofy.utils.java.setOnceGetValue"]},{"name":"open class SetOnce<T>","description":"dev.floofy.utils.java.SetOnce","location":"java-utils/dev.floofy.utils.java/-set-once/index.html","searchKeys":["SetOnce","open class SetOnce<T>","dev.floofy.utils.java.SetOnce"]},{"name":"open fun equals(that: Any): Boolean","description":"dev.floofy.utils.java.SetOnce.equals","location":"java-utils/dev.floofy.utils.java/-set-once/equals.html","searchKeys":["equals","open fun equals(that: Any): Boolean","dev.floofy.utils.java.SetOnce.equals"]},{"name":"open fun getValue(): T","description":"dev.floofy.utils.java.SetOnce.getValue","location":"java-utils/dev.floofy.utils.java/-set-once/get-value.html","searchKeys":["getValue","open fun getValue(): T","dev.floofy.utils.java.SetOnce.getValue"]},{"name":"open fun getValueOrNull(): T","description":"dev.floofy.utils.java.SetOnce.getValueOrNull","location":"java-utils/dev.floofy.utils.java/-set-once/get-value-or-null.html","searchKeys":["getValueOrNull","open fun getValueOrNull(): T","dev.floofy.utils.java.SetOnce.getValueOrNull"]},{"name":"open fun hashCode(): Int","description":"dev.floofy.utils.java.SetOnce.hashCode","location":"java-utils/dev.floofy.utils.java/-set-once/hash-code.html","searchKeys":["hashCode","open fun hashCode(): Int","dev.floofy.utils.java.SetOnce.hashCode"]},{"name":"open fun setValue(value: T)","description":"dev.floofy.utils.java.SetOnce.setValue","location":"java-utils/dev.floofy.utils.java/-set-once/set-value.html","searchKeys":["setValue","open fun setValue(value: T)","dev.floofy.utils.java.SetOnce.setValue"]},{"name":"open fun toString(): String","description":"dev.floofy.utils.java.SetOnce.toString","location":"java-utils/dev.floofy.utils.java/-set-once/to-string.html","searchKeys":["toString","open fun toString(): String","dev.floofy.utils.java.SetOnce.toString"]},{"name":"open fun wasSet(): Boolean","description":"dev.floofy.utils.java.SetOnce.wasSet","location":"java-utils/dev.floofy.utils.java/-set-once/was-set.html","searchKeys":["wasSet","open fun wasSet(): Boolean","dev.floofy.utils.java.SetOnce.wasSet"]},{"name":"fun <T, U, E : Throwable> T.tryCatch(catchOn: KClass<E>, body: T.() -> U): U?","description":"dev.floofy.utils.kotlin.tryCatch","location":"extensions-kotlin/dev.floofy.utils.kotlin/try-catch.html","searchKeys":["tryCatch","fun <T, U, E : Throwable> T.tryCatch(catchOn: KClass<E>, body: T.() -> U): U?","dev.floofy.utils.kotlin.tryCatch"]},{"name":"fun <T, U> T?.ifNotNull(body: T.() -> U): U?","description":"dev.floofy.utils.kotlin.ifNotNull","location":"extensions-kotlin/dev.floofy.utils.kotlin/if-not-null.html","searchKeys":["ifNotNull","fun <T, U> T?.ifNotNull(body: T.() -> U): U?","dev.floofy.utils.kotlin.ifNotNull"]},{"name":"fun <T, U> T?.ifNull(body: () -> U): U?","description":"dev.floofy.utils.kotlin.ifNull","location":"extensions-kotlin/dev.floofy.utils.kotlin/if-null.html","searchKeys":["ifNull","fun <T, U> T?.ifNull(body: () -> U): U?","dev.floofy.utils.kotlin.ifNull"]},{"name":"fun <T> Iterable<T>.every(predicate: (T) -> Boolean): Boolean","description":"dev.floofy.utils.kotlin.every","location":"extensions-kotlin/dev.floofy.utils.kotlin/every.html","searchKeys":["every","fun <T> Iterable<T>.every(predicate: (T) -> Boolean): Boolean","dev.floofy.utils.kotlin.every"]},{"name":"fun <T> Iterable<T>.findIndex(predicate: (T) -> Boolean): Int","description":"dev.floofy.utils.kotlin.findIndex","location":"extensions-kotlin/dev.floofy.utils.kotlin/find-index.html","searchKeys":["findIndex","fun <T> Iterable<T>.findIndex(predicate: (T) -> Boolean): Int","dev.floofy.utils.kotlin.findIndex"]},{"name":"fun <T> List<T>.firstThenRest(): Pair<T, List<T>>","description":"dev.floofy.utils.kotlin.firstThenRest","location":"extensions-kotlin/dev.floofy.utils.kotlin/first-then-rest.html","searchKeys":["firstThenRest","fun <T> List<T>.firstThenRest(): Pair<T, List<T>>","dev.floofy.utils.kotlin.firstThenRest"]},{"name":"fun Long.doFormatTime(): String","description":"dev.floofy.utils.kotlin.doFormatTime","location":"extensions-kotlin/dev.floofy.utils.kotlin/do-format-time.html","searchKeys":["doFormatTime","fun Long.doFormatTime(): String","dev.floofy.utils.kotlin.doFormatTime"]},{"name":"fun Long.humanize(long: Boolean = false, includeMs: Boolean = false): String","description":"dev.floofy.utils.kotlin.humanize","location":"extensions-kotlin/dev.floofy.utils.kotlin/humanize.html","searchKeys":["humanize","fun Long.humanize(long: Boolean = false, includeMs: Boolean = false): String","dev.floofy.utils.kotlin.humanize"]},{"name":"fun Long.sizeToStr(long: Boolean = false): String","description":"dev.floofy.utils.kotlin.sizeToStr","location":"extensions-kotlin/dev.floofy.utils.kotlin/size-to-str.html","searchKeys":["sizeToStr","fun Long.sizeToStr(long: Boolean = false): String","dev.floofy.utils.kotlin.sizeToStr"]},{"name":"fun String.ellipsis(textLen: Int = 1995): String","description":"dev.floofy.utils.kotlin.ellipsis","location":"extensions-kotlin/dev.floofy.utils.kotlin/ellipsis.html","searchKeys":["ellipsis","fun String.ellipsis(textLen: Int = 1995): String","dev.floofy.utils.kotlin.ellipsis"]},{"name":"fun String.titleCase(): String","description":"dev.floofy.utils.kotlin.titleCase","location":"extensions-kotlin/dev.floofy.utils.kotlin/title-case.html","searchKeys":["titleCase","fun String.titleCase(): String","dev.floofy.utils.kotlin.titleCase"]},{"name":"fun createThreadFactory(name: String, priority: Int? = null, threadGroup: ThreadGroup = Thread.currentThread().threadGroup): ThreadFactory","description":"dev.floofy.utils.kotlin.threading.createThreadFactory","location":"extensions-kotlin/dev.floofy.utils.kotlin.threading/create-thread-factory.html","searchKeys":["createThreadFactory","fun createThreadFactory(name: String, priority: Int? = null, threadGroup: ThreadGroup = Thread.currentThread().threadGroup): ThreadFactory","dev.floofy.utils.kotlin.threading.createThreadFactory"]},{"name":"inline fun <E : Throwable, T, U> T.tryCatch(noinline body: T.() -> U): U?","description":"dev.floofy.utils.kotlin.tryCatch","location":"extensions-kotlin/dev.floofy.utils.kotlin/try-catch.html","searchKeys":["tryCatch","inline fun <E : Throwable, T, U> T.tryCatch(noinline body: T.() -> U): U?","dev.floofy.utils.kotlin.tryCatch"]},{"name":"val Long.gigabytes: Long","description":"dev.floofy.utils.kotlin.gigabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/gigabytes.html","searchKeys":["gigabytes","val Long.gigabytes: Long","dev.floofy.utils.kotlin.gigabytes"]},{"name":"val Long.kilobytes: Long","description":"dev.floofy.utils.kotlin.kilobytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/kilobytes.html","searchKeys":["kilobytes","val Long.kilobytes: Long","dev.floofy.utils.kotlin.kilobytes"]},{"name":"val Long.megabytes: Long","description":"dev.floofy.utils.kotlin.megabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/megabytes.html","searchKeys":["megabytes","val Long.megabytes: Long","dev.floofy.utils.kotlin.megabytes"]},{"name":"val Long.terabytes: Long","description":"dev.floofy.utils.kotlin.terabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/terabytes.html","searchKeys":["terabytes","val Long.terabytes: Long","dev.floofy.utils.kotlin.terabytes"]},{"name":"class Version(val major: Int, val minor: Int, val patch: Int, val build: Int = 0, val release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","description":"dev.floofy.utils.gradle.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/index.html","searchKeys":["Version","class Version(val major: Int, val minor: Int, val patch: Int, val build: Int = 0, val release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","dev.floofy.utils.gradle.Version"]},{"name":"fun DependencyHandler.floofy(group: String, module: String, version: String = \"\", type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.floofy","location":"gradle-utils/dev.floofy.utils.gradle/floofy.html","searchKeys":["floofy","fun DependencyHandler.floofy(group: String, module: String, version: String = \"\", type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.floofy"]},{"name":"fun DependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun DependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.noelware"]},{"name":"fun KotlinDependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.floofy","location":"gradle-utils/dev.floofy.utils.gradle/floofy.html","searchKeys":["floofy","fun KotlinDependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.floofy"]},{"name":"fun KotlinDependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun KotlinDependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.noelware"]},{"name":"fun ReleaseType(suffix: String)","description":"dev.floofy.utils.gradle.ReleaseType.ReleaseType","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-release-type.html","searchKeys":["ReleaseType","fun ReleaseType(suffix: String)","dev.floofy.utils.gradle.ReleaseType.ReleaseType"]},{"name":"fun RepositoryHandler.noel(snapshots: Boolean = false)","description":"dev.floofy.utils.gradle.noel","location":"gradle-utils/dev.floofy.utils.gradle/noel.html","searchKeys":["noel","fun RepositoryHandler.noel(snapshots: Boolean = false)","dev.floofy.utils.gradle.noel"]},{"name":"fun RepositoryHandler.noelware(snapshots: Boolean = false)","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun RepositoryHandler.noelware(snapshots: Boolean = false)","dev.floofy.utils.gradle.noelware"]},{"name":"fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","description":"dev.floofy.utils.gradle.Version.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/-version.html","searchKeys":["Version","fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","dev.floofy.utils.gradle.Version.Version"]},{"name":"fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","description":"dev.floofy.utils.gradle.Version.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/-version.html","searchKeys":["Version","fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","dev.floofy.utils.gradle.Version.Version"]},{"name":"fun Version(major: Int, minor: Int, patch: Int, release: ReleaseType = ReleaseType.None)","description":"dev.floofy.utils.gradle.Version.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/-version.html","searchKeys":["Version","fun Version(major: Int, minor: Int, patch: Int, release: ReleaseType = ReleaseType.None)","dev.floofy.utils.gradle.Version.Version"]},{"name":"fun Version(major: Int, minor: Int, patch: Int, release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","description":"dev.floofy.utils.gradle.Version.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/-version.html","searchKeys":["Version","fun Version(major: Int, minor: Int, patch: Int, release: ReleaseType = ReleaseType.None, showPatchNumber: Boolean = false)","dev.floofy.utils.gradle.Version.Version"]},{"name":"fun getGitCommit(): String?","description":"dev.floofy.utils.gradle.Version.getGitCommit","location":"gradle-utils/dev.floofy.utils.gradle/-version/get-git-commit.html","searchKeys":["getGitCommit","fun getGitCommit(): String?","dev.floofy.utils.gradle.Version.getGitCommit"]},{"name":"fun toSemVer(strict: Boolean = false): Version","description":"dev.floofy.utils.gradle.Version.toSemVer","location":"gradle-utils/dev.floofy.utils.gradle/-version/to-sem-ver.html","searchKeys":["toSemVer","fun toSemVer(strict: Boolean = false): Version","dev.floofy.utils.gradle.Version.toSemVer"]},{"name":"infix fun <T> Property<in T>.by(value: T)","description":"dev.floofy.utils.gradle.by","location":"gradle-utils/dev.floofy.utils.gradle/by.html","searchKeys":["by","infix fun <T> Property<in T>.by(value: T)","dev.floofy.utils.gradle.by"]},{"name":"infix fun <T> Property<in T>.byLazy(lazyValue: Property<in T>.() -> Unit)","description":"dev.floofy.utils.gradle.byLazy","location":"gradle-utils/dev.floofy.utils.gradle/by-lazy.html","searchKeys":["byLazy","infix fun <T> Property<in T>.byLazy(lazyValue: Property<in T>.() -> Unit)","dev.floofy.utils.gradle.byLazy"]},{"name":"infix fun satisfiedBy(constraint: Constraint): Boolean","description":"dev.floofy.utils.gradle.Version.satisfiedBy","location":"gradle-utils/dev.floofy.utils.gradle/-version/satisfied-by.html","searchKeys":["satisfiedBy","infix fun satisfiedBy(constraint: Constraint): Boolean","dev.floofy.utils.gradle.Version.satisfiedBy"]},{"name":"object Alpha : ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.Alpha","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-alpha/index.html","searchKeys":["Alpha","object Alpha : ReleaseType","dev.floofy.utils.gradle.ReleaseType.Alpha"]},{"name":"object Beta : ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.Beta","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-beta/index.html","searchKeys":["Beta","object Beta : ReleaseType","dev.floofy.utils.gradle.ReleaseType.Beta"]},{"name":"object None : ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.None","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-none/index.html","searchKeys":["None","object None : ReleaseType","dev.floofy.utils.gradle.ReleaseType.None"]},{"name":"object ReleaseCandidate : ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.ReleaseCandidate","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-release-candidate/index.html","searchKeys":["ReleaseCandidate","object ReleaseCandidate : ReleaseType","dev.floofy.utils.gradle.ReleaseType.ReleaseCandidate"]},{"name":"object Snapshot : ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.Snapshot","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-snapshot/index.html","searchKeys":["Snapshot","object Snapshot : ReleaseType","dev.floofy.utils.gradle.ReleaseType.Snapshot"]},{"name":"open class ReleaseType(val suffix: String)","description":"dev.floofy.utils.gradle.ReleaseType","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/index.html","searchKeys":["ReleaseType","open class ReleaseType(val suffix: String)","dev.floofy.utils.gradle.ReleaseType"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.floofy.utils.gradle.ReleaseType.equals","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.floofy.utils.gradle.ReleaseType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.floofy.utils.gradle.Version.equals","location":"gradle-utils/dev.floofy.utils.gradle/-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.floofy.utils.gradle.Version.equals"]},{"name":"open override fun hashCode(): Int","description":"dev.floofy.utils.gradle.ReleaseType.hashCode","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.floofy.utils.gradle.ReleaseType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.floofy.utils.gradle.Version.hashCode","location":"gradle-utils/dev.floofy.utils.gradle/-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.floofy.utils.gradle.Version.hashCode"]},{"name":"open override fun toString(): String","description":"dev.floofy.utils.gradle.Version.toString","location":"gradle-utils/dev.floofy.utils.gradle/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.floofy.utils.gradle.Version.toString"]},{"name":"val build: Int = 0","description":"dev.floofy.utils.gradle.Version.build","location":"gradle-utils/dev.floofy.utils.gradle/-version/build.html","searchKeys":["build","val build: Int = 0","dev.floofy.utils.gradle.Version.build"]},{"name":"val gitCommitHash: String?","description":"dev.floofy.utils.gradle.Version.gitCommitHash","location":"gradle-utils/dev.floofy.utils.gradle/-version/git-commit-hash.html","searchKeys":["gitCommitHash","val gitCommitHash: String?","dev.floofy.utils.gradle.Version.gitCommitHash"]},{"name":"val major: Int","description":"dev.floofy.utils.gradle.Version.major","location":"gradle-utils/dev.floofy.utils.gradle/-version/major.html","searchKeys":["major","val major: Int","dev.floofy.utils.gradle.Version.major"]},{"name":"val minor: Int","description":"dev.floofy.utils.gradle.Version.minor","location":"gradle-utils/dev.floofy.utils.gradle/-version/minor.html","searchKeys":["minor","val minor: Int","dev.floofy.utils.gradle.Version.minor"]},{"name":"val patch: Int","description":"dev.floofy.utils.gradle.Version.patch","location":"gradle-utils/dev.floofy.utils.gradle/-version/patch.html","searchKeys":["patch","val patch: Int","dev.floofy.utils.gradle.Version.patch"]},{"name":"val release: ReleaseType","description":"dev.floofy.utils.gradle.Version.release","location":"gradle-utils/dev.floofy.utils.gradle/-version/release.html","searchKeys":["release","val release: ReleaseType","dev.floofy.utils.gradle.Version.release"]},{"name":"val suffix: String","description":"dev.floofy.utils.gradle.ReleaseType.suffix","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/suffix.html","searchKeys":["suffix","val suffix: String","dev.floofy.utils.gradle.ReleaseType.suffix"]}]