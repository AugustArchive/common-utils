[{"name":"fun logging(name: String): ReadOnlyProperty<Any?, Logger>","description":"dev.floofy.utils.slf4j.logging","location":"slf4j/dev.floofy.utils.slf4j/logging.html","searchKeys":["logging","fun logging(name: String): ReadOnlyProperty<Any?, Logger>","dev.floofy.utils.slf4j.logging"]},{"name":"inline fun <T> logging(): ReadOnlyProperty<Any?, Logger>","description":"dev.floofy.utils.slf4j.logging","location":"slf4j/dev.floofy.utils.slf4j/logging.html","searchKeys":["logging","inline fun <T> logging(): ReadOnlyProperty<Any?, Logger>","dev.floofy.utils.slf4j.logging"]},{"name":"inline fun <T> GlobalContext.retrieve(): T","description":"dev.floofy.utils.koin.retrieve","location":"extensions-koin/dev.floofy.utils.koin/retrieve.html","searchKeys":["retrieve","inline fun <T> GlobalContext.retrieve(): T","dev.floofy.utils.koin.retrieve"]},{"name":"inline fun <T> GlobalContext.retrieveAll(): List<T>","description":"dev.floofy.utils.koin.retrieveAll","location":"extensions-koin/dev.floofy.utils.koin/retrieve-all.html","searchKeys":["retrieveAll","inline fun <T> GlobalContext.retrieveAll(): List<T>","dev.floofy.utils.koin.retrieveAll"]},{"name":"inline fun <T> GlobalContext.retrieveOrNull(): T?","description":"dev.floofy.utils.koin.retrieveOrNull","location":"extensions-koin/dev.floofy.utils.koin/retrieve-or-null.html","searchKeys":["retrieveOrNull","inline fun <T> GlobalContext.retrieveOrNull(): T?","dev.floofy.utils.koin.retrieveOrNull"]},{"name":"inline fun <T> inject(): ReadOnlyProperty<Any?, T>","description":"dev.floofy.utils.koin.inject","location":"extensions-koin/dev.floofy.utils.koin/inject.html","searchKeys":["inject","inline fun <T> inject(): ReadOnlyProperty<Any?, T>","dev.floofy.utils.koin.inject"]},{"name":"class AsyncTransaction<T>(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","description":"dev.floofy.utils.exposed.AsyncTransaction","location":"exposed/dev.floofy.utils.exposed/-async-transaction/index.html","searchKeys":["AsyncTransaction","class AsyncTransaction<T>(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","dev.floofy.utils.exposed.AsyncTransaction"]},{"name":"fun <T> AsyncTransaction(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","description":"dev.floofy.utils.exposed.AsyncTransaction.AsyncTransaction","location":"exposed/dev.floofy.utils.exposed/-async-transaction/-async-transaction.html","searchKeys":["AsyncTransaction","fun <T> AsyncTransaction(scope: CoroutineScope = GlobalScope, body: Transaction.() -> T)","dev.floofy.utils.exposed.AsyncTransaction.AsyncTransaction"]},{"name":"suspend fun <T> asyncTransaction(scope: CoroutineScope = GlobalScope, block: Transaction.() -> T): T","description":"dev.floofy.utils.exposed.asyncTransaction","location":"exposed/dev.floofy.utils.exposed/async-transaction.html","searchKeys":["asyncTransaction","suspend fun <T> asyncTransaction(scope: CoroutineScope = GlobalScope, block: Transaction.() -> T): T","dev.floofy.utils.exposed.asyncTransaction"]},{"name":"suspend fun execute(): T","description":"dev.floofy.utils.exposed.AsyncTransaction.execute","location":"exposed/dev.floofy.utils.exposed/-async-transaction/execute.html","searchKeys":["execute","suspend fun execute(): T","dev.floofy.utils.exposed.AsyncTransaction.execute"]},{"name":"fun <T, U, E : Throwable> T.tryCatch(catchOn: KClass<E>, body: (T) -> U): U?","description":"dev.floofy.utils.kotlin.tryCatch","location":"extensions-kotlin/dev.floofy.utils.kotlin/try-catch.html","searchKeys":["tryCatch","fun <T, U, E : Throwable> T.tryCatch(catchOn: KClass<E>, body: (T) -> U): U?","dev.floofy.utils.kotlin.tryCatch"]},{"name":"fun <T, U> T?.ifNotNull(body: (T) -> U): U?","description":"dev.floofy.utils.kotlin.ifNotNull","location":"extensions-kotlin/dev.floofy.utils.kotlin/if-not-null.html","searchKeys":["ifNotNull","fun <T, U> T?.ifNotNull(body: (T) -> U): U?","dev.floofy.utils.kotlin.ifNotNull"]},{"name":"fun <T, U> T?.ifNull(body: T?.() -> U): U?","description":"dev.floofy.utils.kotlin.ifNull","location":"extensions-kotlin/dev.floofy.utils.kotlin/if-null.html","searchKeys":["ifNull","fun <T, U> T?.ifNull(body: T?.() -> U): U?","dev.floofy.utils.kotlin.ifNull"]},{"name":"fun Long.humanize(long: Boolean = false, includeMs: Boolean = false): String","description":"dev.floofy.utils.kotlin.humanize","location":"extensions-kotlin/dev.floofy.utils.kotlin/humanize.html","searchKeys":["humanize","fun Long.humanize(long: Boolean = false, includeMs: Boolean = false): String","dev.floofy.utils.kotlin.humanize"]},{"name":"fun Long.sizeToStr(): String","description":"dev.floofy.utils.kotlin.sizeToStr","location":"extensions-kotlin/dev.floofy.utils.kotlin/size-to-str.html","searchKeys":["sizeToStr","fun Long.sizeToStr(): String","dev.floofy.utils.kotlin.sizeToStr"]},{"name":"fun String.ellipsis(textLen: Int = 1995): String","description":"dev.floofy.utils.kotlin.ellipsis","location":"extensions-kotlin/dev.floofy.utils.kotlin/ellipsis.html","searchKeys":["ellipsis","fun String.ellipsis(textLen: Int = 1995): String","dev.floofy.utils.kotlin.ellipsis"]},{"name":"fun String.titleCase(): String","description":"dev.floofy.utils.kotlin.titleCase","location":"extensions-kotlin/dev.floofy.utils.kotlin/title-case.html","searchKeys":["titleCase","fun String.titleCase(): String","dev.floofy.utils.kotlin.titleCase"]},{"name":"fun createThreadFactory(name: String, priority: Int? = null, threadGroup: ThreadGroup = Thread.currentThread().threadGroup): ThreadFactory","description":"dev.floofy.utils.kotlin.threading.createThreadFactory","location":"extensions-kotlin/dev.floofy.utils.kotlin.threading/create-thread-factory.html","searchKeys":["createThreadFactory","fun createThreadFactory(name: String, priority: Int? = null, threadGroup: ThreadGroup = Thread.currentThread().threadGroup): ThreadFactory","dev.floofy.utils.kotlin.threading.createThreadFactory"]},{"name":"val Long.gigabytes: Long","description":"dev.floofy.utils.kotlin.gigabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/gigabytes.html","searchKeys":["gigabytes","val Long.gigabytes: Long","dev.floofy.utils.kotlin.gigabytes"]},{"name":"val Long.kilobytes: Long","description":"dev.floofy.utils.kotlin.kilobytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/kilobytes.html","searchKeys":["kilobytes","val Long.kilobytes: Long","dev.floofy.utils.kotlin.kilobytes"]},{"name":"val Long.megabytes: Long","description":"dev.floofy.utils.kotlin.megabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/megabytes.html","searchKeys":["megabytes","val Long.megabytes: Long","dev.floofy.utils.kotlin.megabytes"]},{"name":"val Long.terabytes: Long","description":"dev.floofy.utils.kotlin.terabytes","location":"extensions-kotlin/dev.floofy.utils.kotlin/terabytes.html","searchKeys":["terabytes","val Long.terabytes: Long","dev.floofy.utils.kotlin.terabytes"]},{"name":"Beta(\"beta\")","description":"dev.floofy.utils.gradle.ReleaseType.Beta","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-beta/index.html","searchKeys":["Beta","Beta(\"beta\")","dev.floofy.utils.gradle.ReleaseType.Beta"]},{"name":"None(\"\")","description":"dev.floofy.utils.gradle.ReleaseType.None","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-none/index.html","searchKeys":["None","None(\"\")","dev.floofy.utils.gradle.ReleaseType.None"]},{"name":"ReleaseCandidate(\"rc\")","description":"dev.floofy.utils.gradle.ReleaseType.ReleaseCandidate","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-release-candidate/index.html","searchKeys":["ReleaseCandidate","ReleaseCandidate(\"rc\")","dev.floofy.utils.gradle.ReleaseType.ReleaseCandidate"]},{"name":"Snapshot(\"snapshot\")","description":"dev.floofy.utils.gradle.ReleaseType.Snapshot","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-snapshot/index.html","searchKeys":["Snapshot","Snapshot(\"snapshot\")","dev.floofy.utils.gradle.ReleaseType.Snapshot"]},{"name":"class Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","description":"dev.floofy.utils.gradle.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/index.html","searchKeys":["Version","class Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","dev.floofy.utils.gradle.Version"]},{"name":"enum ReleaseType : Enum<ReleaseType> ","description":"dev.floofy.utils.gradle.ReleaseType","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/index.html","searchKeys":["ReleaseType","enum ReleaseType : Enum<ReleaseType> ","dev.floofy.utils.gradle.ReleaseType"]},{"name":"fun DependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.floofy","location":"gradle-utils/dev.floofy.utils.gradle/floofy.html","searchKeys":["floofy","fun DependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.floofy"]},{"name":"fun DependencyHandler.nino(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.nino","location":"gradle-utils/dev.floofy.utils.gradle/nino.html","searchKeys":["nino","fun DependencyHandler.nino(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.nino"]},{"name":"fun DependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun DependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.noelware"]},{"name":"fun KotlinDependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.floofy","location":"gradle-utils/dev.floofy.utils.gradle/floofy.html","searchKeys":["floofy","fun KotlinDependencyHandler.floofy(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.floofy"]},{"name":"fun KotlinDependencyHandler.nino(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.nino","location":"gradle-utils/dev.floofy.utils.gradle/nino.html","searchKeys":["nino","fun KotlinDependencyHandler.nino(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.nino"]},{"name":"fun KotlinDependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun KotlinDependencyHandler.noelware(group: String, module: String, version: String, type: String = \"implementation\"): Dependency","dev.floofy.utils.gradle.noelware"]},{"name":"fun RepositoryHandler.noel(snapshots: Boolean = false)","description":"dev.floofy.utils.gradle.noel","location":"gradle-utils/dev.floofy.utils.gradle/noel.html","searchKeys":["noel","fun RepositoryHandler.noel(snapshots: Boolean = false)","dev.floofy.utils.gradle.noel"]},{"name":"fun RepositoryHandler.noelware(snapshots: Boolean = false)","description":"dev.floofy.utils.gradle.noelware","location":"gradle-utils/dev.floofy.utils.gradle/noelware.html","searchKeys":["noelware","fun RepositoryHandler.noelware(snapshots: Boolean = false)","dev.floofy.utils.gradle.noelware"]},{"name":"fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","description":"dev.floofy.utils.gradle.Version.Version","location":"gradle-utils/dev.floofy.utils.gradle/-version/-version.html","searchKeys":["Version","fun Version(major: Int, minor: Int, patch: Int, build: Int = 0, release: ReleaseType = ReleaseType.None)","dev.floofy.utils.gradle.Version.Version"]},{"name":"fun from(suffix: String): ReleaseType","description":"dev.floofy.utils.gradle.ReleaseType.Companion.from","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-companion/from.html","searchKeys":["from","fun from(suffix: String): ReleaseType","dev.floofy.utils.gradle.ReleaseType.Companion.from"]},{"name":"fun fromOrNull(suffix: String): ReleaseType?","description":"dev.floofy.utils.gradle.ReleaseType.Companion.fromOrNull","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-companion/from-or-null.html","searchKeys":["fromOrNull","fun fromOrNull(suffix: String): ReleaseType?","dev.floofy.utils.gradle.ReleaseType.Companion.fromOrNull"]},{"name":"infix fun <T> Property<T>.by(value: T)","description":"dev.floofy.utils.gradle.by","location":"gradle-utils/dev.floofy.utils.gradle/by.html","searchKeys":["by","infix fun <T> Property<T>.by(value: T)","dev.floofy.utils.gradle.by"]},{"name":"object Companion","description":"dev.floofy.utils.gradle.ReleaseType.Companion","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.floofy.utils.gradle.ReleaseType.Companion"]},{"name":"open override fun toString(): String","description":"dev.floofy.utils.gradle.Version.toString","location":"gradle-utils/dev.floofy.utils.gradle/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.floofy.utils.gradle.Version.toString"]},{"name":"val suffix: String","description":"dev.floofy.utils.gradle.ReleaseType.suffix","location":"gradle-utils/dev.floofy.utils.gradle/-release-type/suffix.html","searchKeys":["suffix","val suffix: String","dev.floofy.utils.gradle.ReleaseType.suffix"]}]